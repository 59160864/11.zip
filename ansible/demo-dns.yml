---
- hosts: all
  become: yes
  become_user: root
  tasks:
  - name: copy resolv file
    template:
      src: template/resolv1.conf.j2
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: "0644"

  - name: Install bind at ansible-mgn
    yum: 
      name: bind
      state: latest
    when: ansible_connection == 'local'

  - name: edit IP named.conf
    lineinfile:
      path: /etc/named.conf
      regexp: 'listen-on port 53 { 127.0.0.1; };'
      line: 'listen-on port 53 { 127.0.0.1; 192.168.100.11;};'
      backup: yes
    when: ansible_connection == 'local'

  - name: edit allow-query to any in named.conf
    lineinfile:
      path: /etc/named.conf
      regexp: 'allow-query     { localhost; };'
      line: 'allow-query { any; };'
      backup: yes
    when: ansible_connection == 'local'

  - name: include zone file in named.conf
    lineinfile:
      path: /etc/named.conf
      line: 'include "/etc/named/named.conf.local";'
      backup: yes
    when: ansible_connection == 'local'
  
  - name: chang permission
    template:
      src: template/named.conf.local.j2
      dest: /etc/named/named.conf.local
      owner: root
      group: root
      mode: "0755"
      backup: yes
    when: ansible_connection == 'local'
  
  - name: Create zones directory in /etc/named
    file:
      path: /etc/named/zones
      state: directory
      mode: 0755
    when: ansible_connection == 'local'
  
  - name: Copy forward and revest zone file to /etc/named/zones
    template:
      src: '{{ item.source }}'
      dest: '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/db.mynet-864.com.j2',destination: '/etc/named/zones/db.mynet-864.com' }
    - { source: 'template/db.192.168.100.j2',destination: '/etc/named/zones/db.192.168.100' }
    when: ansible_connection == 'local'
  
  - name: start service
    service:
      name: named
      state: started
    when: ansible_connection == 'local'

  - name: start firewalld
    service:
      name: firewalld
      state: started
    when: ansible_connection == 'local'

  - name: open firewalld
    firewalld:
      port: '{{ item }}'
      permanent: yes
      state: enabled
    loop:
      - "53/udp"
      - "53/tcp"
    when: ansible_connection == 'local'

  - name: restart firewalld
    service:
      name: firewalld
      state: restarted
    when: ansible_connection == 'local'

  - name: install bind-utils all
    yum:
      name: bind-utils
      state: latest

  - name: copy resolv file
    template:
      src: template/resolv.conf.j2
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: "0644"

  - name: check result
    command: nslookup ansible-mgn.mynet-864.com
    register: myoutput
  - debug: msg="{{ myoutput.stdout }}"

  

  

